{"name":"Steamer","tagline":"Docker that contains steam, caution steam can cause severe burns!","body":"# steamer\r\nDocker that contains steam, caution steam can cause severe burns!\r\n\r\n## Usage\r\nreplace steamer.txt with a custom script of your own, and replace run.sh with the server command then `make run`\r\n\r\n## Caveats\r\nBecause of the Steam Guard Token. You must get into the VM, login as the steam user and incant `/home/steam/steamcmd/steamcmd.sh`,\r\nthen at the steam prompt type `login $STEAM_USER $STEAM_PASSWORD` with the steam credentials for your dedicated server account \r\n(it is recommended you make a separate account for each dedicated server you put up)\r\n\r\nI’m looking for a good way to automate this process.\r\n\r\nAt this point you will have to do the dance to get the steam token.\r\n\r\nAnd to make all this persistent you’ll need to -v mount at least the steam directories, but I’ve just been mounting the entire /home/steam directory so I can save maps and other things out as well YMMV\r\n\r\nyou can see an example here that I made for octohost.io\r\nhttps://github.com/Thalhalla/armocto\r\n\r\nsaving the directory before migrating to octohost can be a tricky step.  Essentially I run `make run` on this project:\r\nhttp://thalhalla.github.io/dockarmaiii/\r\nand copy the home directory out at that time.  Then copy over to my octohost into the `/exports/armocto` directory\r\n\r\nview the dev docs here on creating a script for the steamcmd:\r\nhttps://developer.valvesoftware.com/wiki/SteamCMD#Creating_a_script\r\nthat is the same as the default steamer.txt given here\r\n\r\nmain website here:\r\nhttp://joshuacox.github.io/steamer/\r\n\r\n\r\n","google":"UA-69335315-1","note":"Don't delete this file! It's used internally to help with page regeneration."}